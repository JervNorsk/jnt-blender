[settings]
python.uv_venv_auto = true
#aqua.registry_url = 'https://github.com/aquaproj/aqua-registry'
#aqua.registry_url = 'file://{{cwd}}../../.mise/registry/aqua'
#aqua.registry_url = 'file://{{config_root_dir}}'

[tools]
#python = '3.11'
uv = 'latest'
aqua = 'latest'
#blender = 'latest'

[env]
UV_LINK_MODE='copy'
AQUA_LOG_LEVEL='debug'
AQUA_DISABLE_POLICY='true'
_.python.venv = { path = '{{cwd}}/.venv' }
SETUPTOOLS_SCM_DEBUG = 'true'

[vars]
#branch_name='{{ exec(command="git tag --sort=refname | head -n 1") }}'
build_dir = 'build'
blender_exec = '''
{%- if os() == "windows" -%}
aqua exec -- blender
{%- else -%}
blender
{%- endif -%}
'''

[tasks.'blender:extensions:tasks']
depends = [
    'mise:tasks blender:extensions {{cwd}}'
]

[tasks.'blender:extensions:setup']
run = 'aqua i blender'

[tasks.'blender:extensions:run']
run = '{{vars.blender_exec}} {{arg(var=true, default="")}}'

[tasks.'blender:extensions:run:help']
run = '{{vars.blender_exec}} --help'

[tasks.'blender:extensions:clean']
run = [
    'rm -rf {{ vars.build_dir }}'
]
run_windows = [
    'rmdir /s /q {{ vars.build_dir | replace(from="/", to="\") }}'
]

[tasks.'blender:extensions:build']
depends = [
    'blender:extensions:build:workspace',
]
run = [
    'mise r blender:extensions:build:module {{cwd}} jnt',
    'mise r blender:extensions:build:addon {{cwd}}/modules jnt_sandbox',
    'mise r blender:extensions:build:addon {{cwd}}/modules jnt_comfyui',
]
depends_post = [
    "blender:extensions:build:index",
]

[tasks.'blender:extensions:build:workspace']
run = [
    'mkdir -p {{ vars.build_dir }} || exit 0'
]
run_windows = [
    'mkdir {{ vars.build_dir | replace(from="/", to="\") }} || exit 0'
]
hide = true
quiet = true

[tasks.'blender:extensions:build:module']
run = [
    'uv run {{cwd}}/utils/update_version.py {{arg(name="path")}} {{arg(name="name")}}',
]
hide = true

[tasks.'blender:extensions:build:addon']
run = [
    'uv run {{cwd}}/utils/update_version.py {{arg(name="path")}}/{{arg(name="name")}} {{arg(name="name")}}',
    '{{vars.blender_exec}} -c extension build --source-dir {{arg(name="path")}}/{{arg(name="name")}} --output-dir {{vars.build_dir}}',
]
hide = true

[tasks.'blender:extensions:build:index']
run = [
    '{{vars.blender_exec}} -c extension server-generate --repo-dir {{vars.build_dir}}',
]
hide = true

[tasks.'blender:extensions:workflow']
dir = "{{cwd}}/../.."
run = [
    'act -W .github/workflows/jnt-blender-extensions.yml {{arg(var=true, default="")}}'
]

[tasks.'blender:extensions:workflow:validate']
depends = [
    'blender:extensions:workflow --dryrun'
]

[tasks.'blender:extensions:publish']
#description = 'Publish Blender Extesion on release branch with GitHub Actions'
run = [
    'git tag extensions/{{arg(name="module")}}/{{arg(name="version")}}'
#    'gh workflow run jnt-blender-extensions.yml --ref develop'
]

[tasks.'blender:extensions:publish:list']
run = [
    'git tag --sort=-v:refname'
]

##[tasks.'blender:extensions:publish:status']
##description = ''
##run = [
##    'gh run list --workflow=jnt-blender-extensions.yml'
##]
##
##[tasks.'blender:extensions:unpublish']
##description = 'Drop Blender extensions on release/next'
##run = [
##    'git push -d origin release/next'
##]
#
#[tasks.'blender:extensions:cli']
#description = 'Access to Blender extensions CLI'
#run = [
#    'blender -c extension'
#]
#
#[tasks.'blender:extensions:setup']
#description = 'Setup extension on Blender'
#run = [
#    'blender -c extension repo-add jnt --name JNT --url https://raw.githubusercontent.com/JervNorsk/jnt-blender/refs/heads/release/index.json'
#]
#
#[tasks.'blender:extensions:clean']
#description = 'Clean up extension on Blender'
#run = [
#    'blender -c extension repo-remove jnt'
#]
#
#[tasks.'blender:extensions:check']
#description = 'Check up extension on Blender'
#run = [
#    'blender -c extension sync'
#]